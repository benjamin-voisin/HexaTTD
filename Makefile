CXX = g++ --std=c++20 
VPATH = ./src:./src/track_graph:./src/graphics/
RAYLIB_DIR = ./raylib/src/

# This allows the preprocessor to also generate the dependencies in the *.d files
CPPFLAGS += -MP -MD

CXXFLAGS = -Wall -Wextra
DEBUGFLAGS = -g3 -fsanitize=address
RELEASEFLAGS = -flto -O3 -DNDEBUG

MODE ?= RELEASE# Default is Release

# Raylib has some warnings that we donâ€™t want to see when compiling in debug
CUSTOM_CFLAGS = -Wno-unused-result -Wno-unused-but-set-variable

ifeq ($(MODE),DEBUG)
	CXXFLAGS += $(DEBUGFLAGS)
	CUSTOM_CFLAGS += $(DEBUGFLAGS)
else
	CXXFLAGS += $(RELEASEFLAGS)
	CUSTOM_CFLAGS += $(RELEASEFLAGS)
endif

default: hexattd

# for raylib
RAYLIB_RELEASE_PATH = ../../
export CUSTOM_CFLAGS
export RAYLIB_RELEASE_PATH

SOURCES = $(wildcard ./src/*.cpp ./src/track_graph/*.cpp ./src/graphics/*.cpp)
OBJECTS = $(SOURCES:%.cpp=%.o)
MAKEFILES = $(OBJECTS:%.o=%.d)

# We include the autogenerated dependencies
-include $(SOURCES:%.cpp=%.d)

hexattd: $(OBJECTS) libraylib.a
	$(CXX) $(CXXFLAGS) -o $@ $^

libraylib.a:
	$(MAKE) -C $(RAYLIB_DIR)

clean: clean_hex

cleanall : clean clean_raylib

clean_hex:
	rm -f ./hexattd
	rm -f $(OBJECTS)
	rm -f $(MAKEFILES)

clean_raylib:
	$(MAKE) clean -C $(RAYLIB_DIR)
